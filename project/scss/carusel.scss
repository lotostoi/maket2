// Notes on the classes:
//
// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)
//    even when their scroll action started on a carousel, but for compatibility (with Firefox)
//    we're preventing all actions instead
// 2. The .carousel-item-left and .carousel-item-right is used to indicate where
//    the active slide is heading.
// 3. .active.carousel-item is the current slide.
// 4. .active.carousel-item-left and .active.carousel-item-right is the current
//    slide in its in-transition state. Only one of these occurs at a time.
// 5. .carousel-item-next.carousel-item-left and .carousel-item-prev.carousel-item-right
//    is the upcoming slide in transition.
// Carousel
$carousel-control-color:            white;
$carousel-control-width:             15% ;
$carousel-control-opacity:           .5 ;
$carousel-control-hover-opacity:     .9 ;
$carousel-control-transition:        opacity .15s ease;

$carousel-indicator-width:           30px;
$carousel-indicator-height:          3px;
$carousel-indicator-hit-area-height: 10px;
$carousel-indicator-spacer:          3px;
$carousel-indicator-active-bg:       white;
$carousel-indicator-transition:      opacity .6s ease;

$carousel-caption-width:             70%;
$carousel-caption-color:             white;

$carousel-control-icon-width:        20px;

$carousel-control-prev-icon-bg:      url("../img/left.svg");
$carousel-control-next-icon-bg:      url("../img/right.svg");

$carousel-transition-duration:       .6s;
$carousel-transition:                transform $carousel-transition-duration ease-in-out ;

$enable-transitions:        true;
$enable-gradients:         false ;

@mixin transition($transition...) {
    @if $enable-transitions {
      @if length($transition) == 0 {
        transition: $transition-base;
      } @else {
        transition: $transition;
      }
    }
  }
  
@mixin clearfix() {
    &::after {
      display: block;
      clear: both;
      content: "";
    }
  }
  
.carousel {
    position: relative;
  }
  
  .carousel-item {
    position: relative;
    display: none;
    float: left;
    width: 100%;
    margin-right: -100%;
    backface-visibility: hidden;
    @include transition($carousel-transition);
  }
  
  .carousel-item.active,
  .carousel-item-next,
  .carousel-item-prev {
    display: block;
  }
  
  .carousel-item-next:not(.carousel-item-left),
  .active.carousel-item-right {
    transform: translateX(100%);
  }
  
  .carousel-item-prev:not(.carousel-item-right),
  .active.carousel-item-left {
    transform: translateX(-100%);
  }
  
  .carousel-fade {
    .carousel-item {
      opacity: 0;
      transition-property: opacity;
      transform: none;
    }
  
    .carousel-item.active,
    .carousel-item-next.carousel-item-left,
    .carousel-item-prev.carousel-item-right {
      z-index: 1;
      opacity: 1;
    }
  
    .active.carousel-item-left,
    .active.carousel-item-right {
      z-index: 0;
      opacity: 0;
      @include transition(opacity 0s $carousel-transition-duration);
    }
  }
   
  .carousel-control-prev,
  .carousel-control-next {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 1;
    // Use flex for alignment (1-3)
    display: flex; // 1. allow flex styles
    align-items: center; // 2. vertically center contents
    justify-content: center; // 3. horizontally center contents
    width: $carousel-control-width;
    color: $carousel-control-color;
    text-align: center;
    opacity: $carousel-control-opacity;
    @include transition($carousel-control-transition);
  
    // Hover/focus state
    &:hover,
    &:focus {
      color: $carousel-control-color;
      text-decoration: none;
      outline: 0;
      opacity: $carousel-control-hover-opacity;
    }
  }
  .carousel-control-prev {
    left: 0;
    @if $enable-gradients {
      background-image: linear-gradient(90deg, rgba($black, .25), rgba($black, .001));
    }
  }
  .carousel-control-next {
    right: 0;
    @if $enable-gradients {
      background-image: linear-gradient(270deg, rgba($black, .25), rgba($black, .001));
    }
  }
  
  .carousel-control-prev-icon,
  .carousel-control-next-icon {
    display: inline-block;
    width: $carousel-control-icon-width;
    height: $carousel-control-icon-width;
    background: no-repeat 50% / 100% 100%;
  }
  .carousel-control-prev-icon {
    width: 48px;
    height: 73px;
    background: url(../img/left.svg) no-repeat;
  }
  .carousel-control-next-icon {
    width: 48px;
    height: 73px;
    background: url(../img/right.svg) no-repeat;
  }
  
  .carousel-indicators {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 15;
    display: flex;
    justify-content: center;
    padding-left: 0; // override <ol> default
    // Use the .carousel-control's width as margin so we don't overlay those
    margin-right: $carousel-control-width;
    margin-left: $carousel-control-width;
    list-style: none;
  
    li {
      box-sizing: border-box      ;
      flex: 0 1 auto;
      width: 15px;
      height: 15px;
      margin-right: 6.7px;
      margin-left: 0;
      border-radius: 50%;
      border: none;
      background: url(../img/01.svg) no-repeat;
      background-position: center;
      cursor: pointer;
      // Use transparent borders to increase the hit area by 10px on top and bottom.    
      @include transition($carousel-indicator-transition);
    }
  
    .active {
        border: 2px solid #d3c1ad;
        background-image: none;
    }
  }
  
  
  // Optional captions
  //
  //
  
  .carousel-caption {
    position: absolute;
    right: (100% - $carousel-caption-width) / 2;
    bottom: 20px;
    left: (100% - $carousel-caption-width) / 2;
    z-index: 10;
    padding-top: 20px;
    padding-bottom: 20px;
    color: $carousel-caption-color;
    text-align: center;
  }
  